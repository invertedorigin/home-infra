apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: routr
    app.kubernetes.io/name: routr
  name: routr
  namespace: routr
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/instance: routr
      app.kubernetes.io/name: routr
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: |-
          [
            {
              "name": "macvlan-conf-dhcp",
              "namespace": "kube-system",
              "mac": "4a:c5:5d:21:f2:11"
            }
          ]
      labels:
        app.kubernetes.io/component: main
        app.kubernetes.io/instance: routr
        app.kubernetes.io/name: routr
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: TZ
          value: America/Chicago
        image: fonoster/routr-one:latest
        name: main
        resources:
          requests:
            cpu: 50m
            memory: 1Gi
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: config
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostIPC: false
      hostNetwork: false
      hostPID: false
      serviceAccountName: default
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: routr-pvc-replicated

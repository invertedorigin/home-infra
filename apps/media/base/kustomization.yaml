apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: media

resources:
  - namespace.yaml
  - external-secret.yaml
  - pg-cluster.yaml
  - pvc.yaml

configMapGenerator:
  - name: recyclarr-configmap
    files:
      - ./resources/recyclarr.yml
generatorOptions:
  disableNameSuffixHash: true

helmCharts:
  - name: app-template
    repo: https://bjw-s.github.io/helm-charts/
    version: 3.3.2
    releaseName: sonarr
    valuesInLine:
      controllers:
        sonarr:
          initContainers:
            init-db:
              image:
                repository: ghcr.io/buroa/postgres-init
                tag: 16
              envFrom: &envFrom
                - secretRef:
                    name: sonarr-secret
          containers:
            app: &appcontainer
              image:
                repository: ghcr.io/buroa/sonarr-develop
                tag: 4.0.8.2158@sha256:28fab90e7aaac9174bfb149a874bb827751f534bac1bacb0a7ee93c9ff42718c
              env:
                SONARR__APP__INSTANCE: Sonarr
                SONARR__APP__THEME: dark
                SONARR__AUTH__METHOD: External
                SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
                SONARR__LOG__LEVEL: info
                SONARR__SERVER__PORT: &port 8989
                SONARR__UPDATE__BRANCH: develop
                TZ: America/Chicago
              envFrom: *envFrom
              probes:
                liveness: &probes
                  enabled: true
                  custom: true
                  spec:
                    httpGet:
                      path: /ping
                      port: *port
                    initialDelaySeconds: 0
                    periodSeconds: 10
                    timeoutSeconds: 1
                    failureThreshold: 3
                readiness: *probes
              resources:
                requests:
                  cpu: 10m
                limits:
                  memory: 1Gi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities:
                  drop:
                    - ALL
      defaultPodOptions:
        securityContext:
          runAsNonRoot: true
          runAsUser: 568
          runAsGroup: 568
          fsGroup: 568
          fsGroupChangePolicy: OnRootMismatch
      persistence:
        config:
          type: emptyDir
        logs:
          type: emptyDir
          globalMounts:
            - path: /config/logs
        tmp:
          type: emptyDir
        media:
          existingClaim: plex-media
      ingress:
        app:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: "cloudflare-issuer"
          hosts:
            - host: &host sonarr.invertedorigin.com
              paths:
                - path: /
                  pathType: Prefix
                  service:
                    identifier: app
                    port: http
          tls:
            - hosts:
                - *host
              secretName: sonarr-tls-domain
      service:
        app:
          controller: sonarr
          ports:
            http:
              port: *port

  - name: app-template
    repo: https://bjw-s.github.io/helm-charts/
    version: 3.3.2
    releaseName: radarr
    valuesInLine:
      controllers:
        radarr:
          initContainers:
            init-db:
              image:
                repository: ghcr.io/buroa/postgres-init
                tag: 16
              envFrom: &envFrom
                - secretRef:
                    name: radarr-secret
          containers:
            app: &appcontainer
              image:
                repository: ghcr.io/buroa/radarr-develop
                tag: 5.8.3.8933@sha256:d84668ab72c21b18b513e59752f2ea630ee1e2dec07a98fac704946bd8ec9e00
              env:
                RADARR__APP__INSTANCENAME: Radarr
                RADARR__APP__THEME: dark
                RADARR__AUTH__METHOD: External
                RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
                RADARR__LOG__LEVEL: info
                RADARR__SERVER__PORT: &port 7878
                RADARR__UPDATE__BRANCH: develop
                TZ: America/Chicago
              envFrom: *envFrom
              probes:
                liveness: &probes
                  enabled: true
                  custom: true
                  spec:
                    httpGet:
                      path: /ping
                      port: *port
                    initialDelaySeconds: 0
                    periodSeconds: 10
                    timeoutSeconds: 1
                    failureThreshold: 3
                readiness: *probes
              resources:
                requests:
                  cpu: 10m
                limits:
                  memory: 1Gi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities:
                  drop:
                    - ALL
      defaultPodOptions:
        securityContext:
          runAsNonRoot: true
          runAsUser: 568
          runAsGroup: 568
          fsGroup: 568
          fsGroupChangePolicy: OnRootMismatch
      persistence:
        config:
          type: emptyDir
        logs:
          type: emptyDir
          globalMounts:
            - path: /config/logs
        tmp:
          type: emptyDir
        media:
          existingClaim: plex-media
      ingress:
        app:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: "cloudflare-issuer"
          hosts:
            - host: &host radarr.invertedorigin.com
              paths:
                - path: /
                  pathType: Prefix
                  service:
                    identifier: app
                    port: http
          tls:
            - hosts:
                - *host
              secretName: radarr-tls-domain
      service:
        app:
          controller: radarr
          ports:
            http:
              port: *port

  - name: app-template
    repo: https://bjw-s.github.io/helm-charts/
    version: 3.3.2
    releaseName: prowlarr
    valuesInLine:
      controllers:
        prowlarr:
          initContainers:
            init-db:
              image:
                repository: ghcr.io/buroa/postgres-init
                tag: 16
              envFrom: &envFrom
                - secretRef:
                    name: prowlarr-secret
          containers:
            app: &appcontainer
              image:
                repository: ghcr.io/buroa/prowlarr-develop
                tag: 1.21.2.4649@sha256:4991568e26236e60428f1f0e28a957df8534b067bfa02afb749a1ea0f54fac7c
              env:
                PROWLARR__APP__INSTANCENAME: Prowlarr
                PROWLARR__APP__THEME: dark
                PROWLARR__AUTH__METHOD: External
                PROWLARR__AUTH__REQUIRED: DisabledForLocalAddresses
                PROWLARR__LOG__LEVEL: info
                PROWLARR__SERVER__PORT: &port 9696
                PROWLARR__UPDATE__BRANCH: develop
                TZ: America/Chicago
              envFrom: *envFrom
              probes:
                liveness: &probes
                  enabled: true
                  custom: true
                  spec:
                    httpGet:
                      path: /ping
                      port: *port
                    initialDelaySeconds: 0
                    periodSeconds: 10
                    timeoutSeconds: 1
                    failureThreshold: 3
                readiness: *probes
              resources:
                requests:
                  cpu: 10m
                limits:
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities:
                  drop:
                    - ALL
      defaultPodOptions:
        securityContext:
          runAsNonRoot: true
          runAsUser: 568
          runAsGroup: 568
      persistence:
        config:
          type: emptyDir
        tmp:
          type: emptyDir
        media:
          existingClaim: plex-media
      ingress:
        app:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: "cloudflare-issuer"
          hosts:
            - host: &host prowlarr.invertedorigin.com
              paths:
                - path: /
                  pathType: Prefix
                  service:
                    identifier: app
                    port: http
          tls:
            - hosts:
                - *host
              secretName: prowlarr-tls-domain
      service:
        app:
          controller: prowlarr
          ports:
            http:
              port: *port

  - name: app-template
    repo: https://bjw-s.github.io/helm-charts/
    version: 3.3.2
    releaseName: sabnzbd
    valuesInLine:
      controllers:
        sabnzbd:
          containers:
            app:
              image:
                repository: ghcr.io/buroa/sabnzbd
                tag: 4.3.2@sha256:b0b4e415e098727b96a9993a9b382506cf3a739daea5bc7096c708c9d762f10f
              env:
                SABNZBD__PORT: &port 8080
                SABNZBD__HOST_WHITELIST_ENTRIES: >-
                  sabnzbd,
                  sabnzbd.media,
                  sabnzbd.media.svc,
                  sabnzbd.media.svc.cluster,
                  sabnzbd.media.svc.cluster.local,
                  sabnzbd.invertedorigin.com
                TZ: America/Chicago
              envFrom:
                - secretRef:
                    name: sabnzbd-secret
              probes:
                liveness: &probes
                  enabled: true
                  custom: true
                  spec:
                    httpGet:
                      path: /api?mode=version
                      port: *port
                    initialDelaySeconds: 0
                    periodSeconds: 10
                    timeoutSeconds: 1
                    failureThreshold: 3
                readiness: *probes
              resources:
                requests:
                  cpu: 100m
                limits:
                  memory: 8Gi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities:
                  drop:
                    - ALL
      defaultPodOptions:
        securityContext:
          runAsNonRoot: true
          runAsUser: 568
          runAsGroup: 568
          fsGroup: 568
          fsGroupChangePolicy: OnRootMismatch
          supplementalGroups:
            - 65536
      persistence:
        config:
          existingClaim: sabnzbd
        logs:
          type: emptyDir
          globalMounts:
            - path: /config/logs
        tmp:
          type: emptyDir
        media:
          existingClaim: plex-media
      ingress:
        app:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: "cloudflare-issuer"
          hosts:
            - host: &host sabnzbd.invertedorigin.com
              paths:
                - path: /
                  pathType: Prefix
                  service:
                    identifier: app
                    port: http
          tls:
            - hosts:
                - *host
              secretName: sabnzbd-tls-domain
      service:
        app:
          controller: sabnzbd
          ports:
            http:
              port: *port

  - name: app-template
    repo: https://bjw-s.github.io/helm-charts/
    version: 3.3.2
    releaseName: plex
    valuesInline:
      controllers:
        plex:
          containers:
            app:
              image:
                repository: ghcr.io/onedr0p/plex
                tag: 1.40.3.8555-fef15d30c@sha256:82353ee29f0ba3e782aad43bb2be7c1e04b071b9fc83d6c551ef853793f48ab4
              env:
                TZ: America/Chicago
                PLEX_ADVERTISE_URL: https://plex.invertedorigin.com:443,http://10.0.1.7:32400
                PLEX_NO_AUTH_NETWORKS: 10.0.1.0/24
              probes:
                liveness: &probes
                  enabled: true
                  custom: true
                  spec:
                    httpGet:
                      path: /identity
                      port: 32400
                    initialDelaySeconds: 0
                    periodSeconds: 10
                    timeoutSeconds: 1
                    failureThreshold: 3
                readiness: *probes
                startup:
                  enabled: true
                  spec:
                    failureThreshold: 30
                    periodSeconds: 10
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities: { drop: ["ALL"] }
              resources:
                requests:
                  cpu: 100m
                limits:
                  amd.com/gpu: 1
      defaultPodOptions:
        securityContext:
          runAsNonRoot: true
          runAsUser: 568
          runAsGroup: 568
          fsGroup: 568
          fsGroupChangePolicy: OnRootMismatch
          supplementalGroups: [44, 10000]
          seccompProfile: { type: RuntimeDefault }
      service:
        app:
          controller: plex
          type: LoadBalancer
          ports:
            http:
              port: 32400
      ingress:
        app:
          annotations:
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: "cloudflare-issuer"
          hosts:
            - host: &host plex.invertedorigin.com
              paths:
                - path: /
                  service:
                    name: plex
                    port: 32400
          tls:
            - hosts:
                - *host
              secretName: plex-tls-domain
      persistence:
        config:
          existingClaim: plex-config
          globalMounts:
            - path: /config/Library/Application Support/Plex Media Server
        cache:
          existingClaim: plex-cache
          globalMounts:
            - path: /config/Library/Application Support/Plex Media Server/Cache
        logs:
          type: emptyDir
          globalMounts:
            - path: /config/Library/Application Support/Plex Media Server/Logs
        tmp:
          type: emptyDir
        transcode:
          type: emptyDir
        media:
          existingClaim: plex-media

  - name: app-template
    repo: https://bjw-s.github.io/helm-charts/
    version: 3.3.2
    releaseName: recyclarr
    valuesInline:
      controllers:
        recyclarr:
          type: cronjob
          cronjob:
            schedule: "@daily"
            timeZone: &timeZone America/Chicago
            concurrencyPolicy: Forbid
            successfulJobsHistory: 1
            failedJobsHistory: 1
          containers:
            app:
              image:
                repository: ghcr.io/recyclarr/recyclarr
                tag: 7.2.1@sha256:c293cc988c5123899ed4d42b31f227b986d36357688106effdb44e83a3bb9f5a
              args:
                - sync
              env:
                TZ: *timeZone
              envFrom:
                - secretRef:
                    name: recyclarr-secret
              resources:
                requests:
                  cpu: 10m
                limits:
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities:
                  drop:
                    - ALL
      defaultPodOptions:
        securityContext:
          runAsNonRoot: true
          runAsUser: 568
          runAsGroup: 568
          fsGroup: 568
          fsGroupChangePolicy: OnRootMismatch
      persistence:
        config:
          existingClaim: &app recyclarr
        config-file:
          type: configMap
          name: recyclarr-configmap
          globalMounts:
            - path: /config/recyclarr.yml
              subPath: recyclarr.yml
              readOnly: true

  - name: app-template
    repo: https://bjw-s.github.io/helm-charts/
    version: 3.3.2
    releaseName: overseerr
    valuesInLine:
      controllers:
        overseerr:
          containers:
            app:
              image:
                repository: ghcr.io/sct/overseerr
                tag: 1.33.2@sha256:714ea6db2bc007a2262d112bef7eec74972eb33d9c72bddb9cbd98b8742de950
              env:
                LOG_LEVEL: info
                PORT: &port 5055
                TZ: America/Chicago
              probes:
                liveness: &probes
                  enabled: true
                  custom: true
                  spec:
                    httpGet:
                      path: &path /api/v1/status
                      port: *port
                    initialDelaySeconds: 0
                    periodSeconds: 10
                    timeoutSeconds: 1
                    failureThreshold: 3
                readiness: *probes
              resources:
                requests:
                  cpu: 10m
                limits:
                  memory: 2Gi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities:
                  drop:
                    - ALL
      defaultPodOptions:
        securityContext:
          runAsNonRoot: true
          runAsUser: 568
          runAsGroup: 568
          fsGroup: 568
          fsGroupChangePolicy: OnRootMismatch
      persistence:
        config:
          existingClaim: &app overseerr
          globalMounts:
            - path: /app/config
        config-cache:
          existingClaim: overseerr-cache
          globalMounts:
            - path: /app/config/cache
        logs:
          type: emptyDir
          globalMounts:
            - path: /app/config/logs
        tmp:
          type: emptyDir
      ingress:
        app:
          annotations:
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: "cloudflare-issuer"
          hosts:
            - host: &host overseerr.invertedorigin.com
              paths:
                - path: /
                  service:
                    name: overseerr
                    port: 5055
          tls:
            - hosts:
                - *host
              secretName: overseerr-tls-domain
      service:
        app:
          controller: *app
          ports:
            http:
              port: *port

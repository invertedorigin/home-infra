apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: media

resources:
  - namespace.yaml
  - external-secret.yaml
  - pg-cluster.yaml

helmCharts:
  - name: app-template
    repo: https://bjw-s.github.io/helm-charts/
    version: 3.2.1
    releaseName: sonarr
    valuesInLine:
      controllers:
        sonarr:
          initContainers:
            init-db:
              image:
                repository: ghcr.io/buroa/postgres-init
                tag: 16
              envFrom: &envFrom
                - secretRef:
                    name: sonarr-secret
          containers:
            app: &appcontainer
              image:
                repository: ghcr.io/buroa/sonarr-develop
                tag: 4.0.5.1801@sha256:4d87712a4b59bedb65e6414b003a3003eadb68ea84620eb81639469469123463
              env:
                SONARR__APP__INSTANCE: Sonarr
                SONARR__APP__THEME: dark
                SONARR__AUTH__METHOD: External
                SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
                SONARR__LOG__LEVEL: info
                SONARR__SERVER__PORT: &port 8989
                SONARR__UPDATE__BRANCH: develop
                TZ: America/Chicago
              envFrom: *envFrom
              probes:
                liveness: &probes
                  enabled: true
                  custom: true
                  spec:
                    httpGet:
                      path: /ping
                      port: *port
                    initialDelaySeconds: 0
                    periodSeconds: 10
                    timeoutSeconds: 1
                    failureThreshold: 3
                readiness: *probes
              resources:
                requests:
                  cpu: 10m
                limits:
                  memory: 1Gi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities:
                  drop:
                    - ALL
      defaultPodOptions:
        securityContext:
          runAsNonRoot: true
          runAsUser: 568
          runAsGroup: 568
          fsGroup: 568
          fsGroupChangePolicy: OnRootMismatch
      persistence:
        config:
          type: emptyDir
        logs:
          type: emptyDir
          globalMounts:
            - path: /config/logs
        tmp:
          type: emptyDir
      ingress:
        app:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: "cloudflare-issuer"
          hosts:
            - host: &host sonarr.invertedorigin.com
              paths:
                - path: /
                  pathType: Prefix
                  service:
                    identifier: app
                    port: http
          tls:
            - hosts:
                - *host
              secretName: sonarr-tls-domain
      service:
        app:
          controller: sonarr
          ports:
            http:
              port: *port

  - name: app-template
    repo: https://bjw-s.github.io/helm-charts/
    version: 3.2.1
    releaseName: radarr
    valuesInLine:
      controllers:
        radarr:
          initContainers:
            init-db:
              image:
                repository: ghcr.io/buroa/postgres-init
                tag: 16
              envFrom: &envFrom
                - secretRef:
                    name: radarr-secret
          containers:
            app: &appcontainer
              image:
                repository: ghcr.io/buroa/radarr-develop
                tag: 5.8.0.8897@sha256:56c421b6cd5db2e06667400682132ad16815f3c124737a59dd6fcb3038f8b14b
              env:
                RADARR__APP__INSTANCENAME: Radarr
                RADARR__APP__THEME: dark
                RADARR__AUTH__METHOD: External
                RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
                RADARR__LOG__LEVEL: info
                RADARR__SERVER__PORT: &port 7878
                RADARR__UPDATE__BRANCH: develop
                TZ: America/Chicago
              envFrom: *envFrom
              probes:
                liveness: &probes
                  enabled: true
                  custom: true
                  spec:
                    httpGet:
                      path: /ping
                      port: *port
                    initialDelaySeconds: 0
                    periodSeconds: 10
                    timeoutSeconds: 1
                    failureThreshold: 3
                readiness: *probes
              resources:
                requests:
                  cpu: 10m
                limits:
                  memory: 1Gi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities:
                  drop:
                    - ALL
      defaultPodOptions:
        securityContext:
          runAsNonRoot: true
          runAsUser: 568
          runAsGroup: 568
          fsGroup: 568
          fsGroupChangePolicy: OnRootMismatch
      persistence:
        config:
          type: emptyDir
        logs:
          type: emptyDir
          globalMounts:
            - path: /config/logs
        tmp:
          type: emptyDir
      ingress:
        app:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: "cloudflare-issuer"
          hosts:
            - host: &host radarr.invertedorigin.com
              paths:
                - path: /
                  pathType: Prefix
                  service:
                    identifier: app
                    port: http
          tls:
            - hosts:
                - *host
              secretName: radarr-tls-domain
      service:
        app:
          controller: radarr
          ports:
            http:
              port: *port

  - name: app-template
    repo: https://bjw-s.github.io/helm-charts/
    version: 3.2.1
    releaseName: prowlarr
    valuesInLine:
      controllers:
        prowlarr:
          initContainers:
            init-db:
              image:
                repository: ghcr.io/buroa/postgres-init
                tag: 16
              envFrom: &envFrom
                - secretRef:
                    name: prowlarr-secret
          containers:
            app: &appcontainer
              image:
                repository: ghcr.io/buroa/prowlarr-develop
                tag: 1.20.0.4590@sha256:73aa0765131c3de84de8d87e258526dac9a44e6976f76fa49f46f9612c1c2b1e
              env:
                PROWLARR__APP__INSTANCENAME: Prowlarr
                PROWLARR__APP__THEME: dark
                PROWLARR__AUTH__METHOD: External
                PROWLARR__AUTH__REQUIRED: DisabledForLocalAddresses
                PROWLARR__LOG__LEVEL: info
                PROWLARR__SERVER__PORT: &port 9696
                PROWLARR__UPDATE__BRANCH: develop
                TZ: America/Chicago
              envFrom: *envFrom
              probes:
                liveness: &probes
                  enabled: true
                  custom: true
                  spec:
                    httpGet:
                      path: /ping
                      port: *port
                    initialDelaySeconds: 0
                    periodSeconds: 10
                    timeoutSeconds: 1
                    failureThreshold: 3
                readiness: *probes
              resources:
                requests:
                  cpu: 10m
                limits:
                  memory: 512Mi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities:
                  drop:
                    - ALL
      defaultPodOptions:
        securityContext:
          runAsNonRoot: true
          runAsUser: 568
          runAsGroup: 568
      persistence:
        config:
          type: emptyDir
        tmp:
          type: emptyDir
      ingress:
        app:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: "cloudflare-issuer"
          hosts:
            - host: &host prowlarr.invertedorigin.com
              paths:
                - path: /
                  pathType: Prefix
                  service:
                    identifier: app
                    port: http
          tls:
            - hosts:
                - *host
              secretName: prowlarr-tls-domain
      service:
        app:
          controller: prowlarr
          ports:
            http:
              port: *port

  - name: app-template
    repo: https://bjw-s.github.io/helm-charts/
    version: 3.2.1
    releaseName: sabnzbd
    valuesInLine:
      controllers:
        sabnzbd:
          containers:
            app:
              image:
                repository: ghcr.io/buroa/sabnzbd
                tag: 4.3.2@sha256:ce6bc7d3cf3afb2b5204a1e99e943f50600c1cc0f9f028b34b9edd557e388380
              env:
                SABNZBD__PORT: &port 8080
                SABNZBD__HOST_WHITELIST_ENTRIES: >-
                  sabnzbd,
                  sabnzbd.media,
                  sabnzbd.media.svc,
                  sabnzbd.media.svc.cluster,
                  sabnzbd.media.svc.cluster.local,
                  sabnzbd.invertedorigin.com
                TZ: America/Chicago
              envFrom:
                - secretRef:
                    name: sabnzbd-secret
              probes:
                liveness: &probes
                  enabled: true
                  custom: true
                  spec:
                    httpGet:
                      path: /api?mode=version
                      port: *port
                    initialDelaySeconds: 0
                    periodSeconds: 10
                    timeoutSeconds: 1
                    failureThreshold: 3
                readiness: *probes
              resources:
                requests:
                  cpu: 100m
                limits:
                  memory: 8Gi
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities:
                  drop:
                    - ALL
      defaultPodOptions:
        securityContext:
          runAsNonRoot: true
          runAsUser: 568
          runAsGroup: 568
          fsGroup: 568
          fsGroupChangePolicy: OnRootMismatch
          supplementalGroups:
            - 65536
      persistence:
        config:
          type: emptyDir
        logs:
          type: emptyDir
          globalMounts:
            - path: /config/logs
        tmp:
          type: emptyDir
      ingress:
        app:
          enabled: true
          annotations:
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: "cloudflare-issuer"
          hosts:
            - host: &host sabnzbd.invertedorigin.com
              paths:
                - path: /
                  pathType: Prefix
                  service:
                    identifier: app
                    port: http
          tls:
            - hosts:
                - *host
              secretName: sabnzbd-tls-domain
      service:
        app:
          controller: sabnzbd
          ports:
            http:
              port: *port

  - name: app-template
    repo: https://bjw-s.github.io/helm-charts/
    version: 3.2.1
    releaseName: plex
    valuesInline:
      controllers:
        plex:
          containers:
            app:
              image:
                repository: ghcr.io/onedr0p/plex
                tag: 1.40.3.8555-fef15d30c@sha256:82353ee29f0ba3e782aad43bb2be7c1e04b071b9fc83d6c551ef853793f48ab4
              env:
                TZ: America/Chicago
                PLEX_ADVERTISE_URL: https://plex.invertedorigin.com:443,http://10.0.1.7:32400
                PLEX_NO_AUTH_NETWORKS: 10.0.1.0/24
              probes:
                liveness: &probes
                  enabled: true
                  custom: true
                  spec:
                    httpGet:
                      path: /identity
                      port: 32400
                    initialDelaySeconds: 0
                    periodSeconds: 10
                    timeoutSeconds: 1
                    failureThreshold: 3
                readiness: *probes
                startup:
                  enabled: true
                  spec:
                    failureThreshold: 30
                    periodSeconds: 10
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities: { drop: ["ALL"] }
              resources:
                requests:
                  cpu: 100m
                limits:
                  amd.com/gpu: 1
      defaultPodOptions:
        securityContext:
          runAsNonRoot: true
          runAsUser: 568
          runAsGroup: 568
          fsGroup: 568
          fsGroupChangePolicy: OnRootMismatch
          supplementalGroups: [44, 10000]
          seccompProfile: { type: RuntimeDefault }
      service:
        app:
          controller: plex
          type: LoadBalancer
          ports:
            http:
              port: 32400
      ingress:
        app:
          annotations:
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: "cloudflare-issuer"
          hosts:
            - host: &host plex.invertedorigin.com
              paths:
                - path: /
                  service:
                    name: plex
                    port: 32400
          tls:
            - hosts:
                - *host
              secretName: plex-tls-domain
      persistence:
        config:
          existingClaim: plex-config
          globalMounts:
            - path: /config/Library/Application Support/Plex Media Server
        cache:
          existingClaim: plex-cache
          globalMounts:
            - path: /config/Library/Application Support/Plex Media Server/Cache
        logs:
          type: emptyDir
          globalMounts:
            - path: /config/Library/Application Support/Plex Media Server/Logs
        tmp:
          type: emptyDir
        transcode:
          type: emptyDir
        media:
          existingClaim: plex-media
          globalMounts:
            - path: /media

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: scrypted
    app.kubernetes.io/name: scrypted
  name: scrypted
  namespace: scrypted
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/instance: scrypted
      app.kubernetes.io/name: scrypted
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: |-
          [
            {
              "name": "macvlan-conf-dhcp",
              "namespace": "kube-system",
              "mac": "fa:77:a4:fe:98:91"
            }
          ]
      labels:
        app.kubernetes.io/component: main
        app.kubernetes.io/instance: scrypted
        app.kubernetes.io/name: scrypted
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: TZ
          value: America/Chicago
        image: koush/scrypted:latest@sha256:602d001ee8c1e31a22f4addb700e24d8133a8d7efef3493d6249a2e241f22b04
        name: main
        resources:
          limits:
            amd.com/gpu: "1"
          requests:
            cpu: 450m
            memory: 2Gi
            amd.com/gpu: "1"
        volumeMounts:
        - mountPath: /server/volume
          name: media
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostIPC: false
      hostNetwork: false
      hostPID: false
      serviceAccountName: default
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: scrypted-pvc-replicated
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rtsp-to-onvif-north
  namespace: default
  labels:
    app: rtsp-to-onvif
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rtsp-to-onvif
  template:
    metadata:
      labels:
        app: rtsp-to-onvif
      annotations:
        k8s.v1.cni.cncf.io/networks: |-
          [
            {
              "name": "macvlan-conf-dhcp",
              "namespace": "kube-system",
              "mac": "22:c2:8d:28:f2:77"
            }
          ]
    spec:
      initContainers:
        - name: init-config
          image: busybox
          command: ["/bin/sh", "-c", "cp /config/onvif-config-north.yaml /mnt/onvif-config.yaml"]
          volumeMounts:
            - name: config-volume
              mountPath: /mnt
            - name: config-map
              mountPath: /config
      containers:
        - name: rtsp-to-onvif
          image: kulasolutions/rtsp-to-onvif:0.1.35
          command: ["node", "main.js", "/config/onvif-config.yaml"]  # Overridden CMD to use the mounted config
          volumeMounts:
            - name: config-volume
              mountPath: /config/onvif-config.yaml
              subPath: onvif-config.yaml
      volumes:
        - name: config-volume
          emptyDir: {}  # Creates an empty directory for writing
        - name: config-map
          configMap:
            name: onvif-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rtsp-to-onvif-south
  namespace: default
  labels:
    app: rtsp-to-onvif
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rtsp-to-onvif
  template:
    metadata:
      labels:
        app: rtsp-to-onvif
      annotations:
        k8s.v1.cni.cncf.io/networks: |-
          [
            {
              "name": "macvlan-conf-dhcp",
              "namespace": "kube-system",
              "mac": "44:c2:8d:38:f2:77"
            }
          ]
    spec:
      initContainers:
        - name: init-config
          image: busybox
          command: ["/bin/sh", "-c", "cp /config/onvif-config-south.yaml /mnt/onvif-config.yaml"]
          volumeMounts:
            - name: config-volume
              mountPath: /mnt
            - name: config-map
              mountPath: /config
      containers:
        - name: rtsp-to-onvif
          image: kulasolutions/rtsp-to-onvif:0.1.35
          command: ["node", "main.js", "/config/onvif-config.yaml"]  # Overridden CMD to use the mounted config
          volumeMounts:
            - name: config-volume
              mountPath: /config/onvif-config.yaml
              subPath: onvif-config.yaml
      volumes:
        - name: config-volume
          emptyDir: {}  # Creates an empty directory for writing
        - name: config-map
          configMap:
            name: onvif-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rtsp-to-onvif-2340
  namespace: default
  labels:
    app: rtsp-to-onvif
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rtsp-to-onvif-2340
  template:
    metadata:
      labels:
        app: rtsp-to-onvif-2340
      annotations:
        k8s.v1.cni.cncf.io/networks: |-
          [
            {
              "name": "macvlan-conf-dhcp",
              "namespace": "kube-system",
              "mac": "66:c2:8d:38:f2:77"
            }
          ]
    spec:
      initContainers:
        - name: init-config
          image: busybox
          command: ["/bin/sh", "-c", "cp /config/onvif-config-2340.yaml /mnt/onvif-config.yaml"]
          volumeMounts:
            - name: config-volume
              mountPath: /mnt
            - name: config-map
              mountPath: /config
      containers:
        - name: rtsp-to-onvif
          image: kulasolutions/rtsp-to-onvif:0.1.35
          command: ["node", "main.js", "/config/onvif-config.yaml"]  # Overridden CMD to use the mounted config
          volumeMounts:
            - name: config-volume
              mountPath: /config/onvif-config.yaml
              subPath: onvif-config.yaml
      volumes:
        - name: config-volume
          emptyDir: {}  # Creates an empty directory for writing
        - name: config-map
          configMap:
            name: onvif-config

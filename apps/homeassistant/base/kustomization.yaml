apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

namespace: homeassistant

resources:
- namespace.yaml
- pvc.yaml
- external-secret.yaml
- backup.yaml

helmCharts:
- name: app-template
  repo: https://bjw-s.github.io/helm-charts/
  version: 2.5.0
  releaseName: homeassistant
  valuesInline:
    image:
      repository: ghcr.io/home-assistant/home-assistant
      tag: 2024.1.5

    podAnnotations:
      k8s.v1.cni.cncf.io/networks: |-
        [
          {
            "name": "macvlan-conf-dhcp",
            "namespace": "kube-system",
            "mac": "4a:c1:8d:28:f2:77"
          }
        ]

    env:
      TZ: "America/Chicago"

    service:
      main:
        ports:
          http:
            port: 8123

    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
          cert-manager.io/cluster-issuer: "cloudflare-issuer"
          nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, HEAD"
        hosts:
          - host: &host ha.invertedorigin.com
            paths:
              - path: /
        tls:
          - hosts:
              - *host
            secretName: ha-tls-domain

    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false

    resources:
      requests:
        cpu: 50m
        memory: 1Gi
      limits:
        memory: 1Gi

    persistence:
      config:
        enabled: true
        existingClaim: homeassistant-pvc-replicated
        mountPath: /config


- name: app-template
  repo: https://bjw-s.github.io/helm-charts/
  version: 2.5.0
  releaseName: matter-server
  valuesInline:
    image:
      repository: ghcr.io/home-assistant-libs/python-matter-server
      tag: stable

    podAnnotations:
      k8s.v1.cni.cncf.io/networks: |-
        [
          {
            "name": "macvlan-conf-dhcp",
            "namespace": "kube-system",
            "mac": "1a:c4:8d:33:f2:77"
          }
        ]

    env:
      TZ: "America/Chicago"

    service:
      main:
        ports:
          http:
            port: 5580

    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false

    resources:
      requests:
        cpu: 50m
        memory: 1Gi
      limits:
        memory: 1Gi

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: homeassistant
    app.kubernetes.io/name: homeassistant
  name: homeassistant
  namespace: homeassistant
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/instance: homeassistant
      app.kubernetes.io/name: homeassistant
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: |-
          [
            {
              "name": "macvlan-conf-dhcp",
              "namespace": "kube-system",
              "mac": "4a:c1:8d:28:f2:77"
            }
          ]
      labels:
        app.kubernetes.io/component: main
        app.kubernetes.io/instance: homeassistant
        app.kubernetes.io/name: homeassistant
    spec:
      automountServiceAccountToken: true
      containers:
      - env:
        - name: TZ
          value: America/Chicago
        image: ghcr.io/home-assistant/home-assistant:2025.5.1
        name: main
        resources:
          requests:
            cpu: 50m
            memory: 1Gi
        volumeMounts:
        - mountPath: /config
          name: media
        - name: vesync-override
          mountPath: /usr/local/lib/python3.13/site-packages/pyvesync/vesyncfan.py # Specific file inside the folder
          subPath: vesyncfan.py  # Avoids overwriting the whole folder
          readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostIPC: false
      hostNetwork: false
      hostPID: false
      serviceAccountName: default
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: homeassistant-pvc-replicated
      - name: vesync-override
        configMap:
          name: vesync-override
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xcel-itron2mqtt
  namespace: homeassistant
  labels:
    app: xcel-itron2mqtt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xcel-itron2mqtt
  template:
    metadata:
      labels:
        app: xcel-itron2mqtt
    spec:
      containers:
        - name: xcel-itron2mqtt
          image: ghcr.io/zaknye/xcel_itron2mqtt:main
          env:
            - name: MQTT_SERVER
              value: "nats-headless.mqtt.svc.cluster.local"
            - name: MQTT_PORT
              value: "1883"
            - name: MQTT_USER
              value: "mqtt"
            - name: METER_IP
              value: "10.0.3.141"
            - name: METER_PORT
              value: "8081"
          volumeMounts:
            - name: certs
              mountPath: /opt/xcel_itron2mqtt/certs
              readOnly: true
      volumes:
        - name: certs
          secret:
            secretName: xcel-itron2mqtt-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rtl433
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rtl433
  template:
    metadata:
      labels:
        app: rtl433
    spec:
      containers:
        - name: rtl433
          image: hertzg/rtl_433:latest
          args:
            - "-c"
            - "/etc/rtl_433/rtl_433.conf"
          volumeMounts:
            - name: config
              mountPath: /etc/rtl_433/rtl_433.conf
              subPath: rtl433.conf
          securityContext:
            privileged: true
      volumes:
        - name: config
          secret:
            secretName: rtl433-config
      nodeSelector:
        feature.node.kubernetes.io/usb-ff_0bda_2838.present: "true"
        
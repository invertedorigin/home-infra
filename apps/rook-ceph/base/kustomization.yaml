apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

resources:
- namespace.yaml

namespace: rook-ceph

helmCharts:
- name: rook-ceph
  repo: https://charts.rook.io/release
  version: v1.16.3
  releaseName: rook-ceph
  valuesInLine:
    monitoring:
      enabled: true

- name: rook-ceph-cluster
  repo: https://charts.rook.io/release
  version: v1.16.2
  releaseName: rook-ceph-cluster
  namespace: rook-ceph
  valuesInLine:
    operatorNamespace: rook-ceph
    toolbox:
      enabled: true
    cephClusterSpec:
      network:
        hostNetwork: true
      mgr:
        modules:
          - name: pg_autoscaler # This is already enabled by default, but needs to be here so that we don't override the default behavior.
            enabled: true
          - name: rook # This enables the rook module.
            enabled: true
      dashboard:
        prometheusEndpoint: http://vmsingle-victoria.monitoring.svc.cluster.local:8429
      resources:
        osd:
          limits:
            memory: "4Gi"
          requests:
            memory: "1Gi"
        mds:
          requests:
            memory: "1Gi"
          limits:
            memory: "4Gi"
      storage:
        useAllNodes: false
        useAllDevices: false
        nodes:
          - name: node-1
            config:
              osdsPerDevice: "1"
            devices:
              - name: "/dev/disk/by-id/nvme-WD_BLACK_SN850X_2000GB_24163X803861"
          - name: node-2
            config:
              osdsPerDevice: "1"
            devices:
              - name: "/dev/disk/by-id/nvme-WD_BLACK_SN850X_2000GB_24163X803862"
          - name: node-3
            config:
              osdsPerDevice: "1"
            devices:
              - name: "/dev/disk/by-id/nvme-WD_BLACK_SN850X_2000GB_24163X803932"
    cephBlockPools:
      - name: ceph-blockpool
        # see https://github.com/rook/rook/blob/master/Documentation/CRDs/Block-Storage/ceph-block-pool-crd.md#spec for available configuration
        spec:
          failureDomain: host
          enableRBDStats: true
          replicated:
            size: 3
          # Enables collecting RBD per-image IO statistics by enabling dynamic OSD performance counters. Defaults to false.
          # For reference: https://docs.ceph.com/docs/latest/mgr/prometheus/#rbd-io-statistics
          # enableRBDStats: true
        storageClass:
          enabled: true
          name: ceph-block
          annotations: {}
          labels: {}
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: "Immediate"
          mountOptions: []
          # see https://kubernetes.io/docs/concepts/storage/storage-classes/#allowed-topologies
          allowedTopologies: []
          #        - matchLabelExpressions:
          #            - key: rook-ceph-role
          #              values:
          #                - storage-node
          # see https://github.com/rook/rook/blob/master/Documentation/Storage-Configuration/Block-Storage-RBD/block-storage.md#provision-storage for available configuration
          parameters:
            # (optional) mapOptions is a comma-separated list of map options.
            # For krbd options refer
            # https://docs.ceph.com/docs/latest/man/8/rbd/#kernel-rbd-krbd-options
            # For nbd options refer
            # https://docs.ceph.com/docs/latest/man/8/rbd-nbd/#options
            # mapOptions: lock_on_read,queue_depth=1024

            # (optional) unmapOptions is a comma-separated list of unmap options.
            # For krbd options refer
            # https://docs.ceph.com/docs/latest/man/8/rbd/#kernel-rbd-krbd-options
            # For nbd options refer
            # https://docs.ceph.com/docs/latest/man/8/rbd-nbd/#options
            # unmapOptions: force

            # RBD image format. Defaults to "2".
            imageFormat: "2"

            # RBD image features, equivalent to OR'd bitfield value: 63
            # Available for imageFormat: "2". Older releases of CSI RBD
            # support only the `layering` feature. The Linux kernel (KRBD) supports the
            # full feature complement as of 5.4
            imageFeatures: layering

            # These secrets contain Ceph admin credentials.
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
            # Specify the filesystem type of the volume. If not specified, csi-provisioner
            # will set default as `ext4`. Note that `xfs` is not recommended due to potential deadlock
            # in hyperconverged settings where the volume is mounted on the same node as the osds.
            csi.storage.k8s.io/fstype: ext4

    cephFileSystems:
      - name: ceph-filesystem
        # see https://github.com/rook/rook/blob/master/Documentation/CRDs/Shared-Filesystem/ceph-filesystem-crd.md#filesystem-settings for available configuration
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              # Optional and highly recommended, 'data0' by default, see https://github.com/rook/rook/blob/master/Documentation/CRDs/Shared-Filesystem/ceph-filesystem-crd.md#pools
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              limits:
                memory: "4Gi"
              requests:
                cpu: "1000m"
                memory: "1Gi"
            priorityClassName: system-cluster-critical
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          # (Optional) specify a data pool to use, must be the name of one of the data pools above, 'data0' by default
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: "Immediate"
          annotations: {}
          labels: {}
          mountOptions: []
          # see https://github.com/rook/rook/blob/master/Documentation/Storage-Configuration/Shared-Filesystem-CephFS/filesystem-storage.md#provision-storage for available configuration
          parameters:
            # The secrets contain Ceph admin credentials.
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
            # Specify the filesystem type of the volume. If not specified, csi-provisioner
            # will set default as `ext4`. Note that `xfs` is not recommended due to potential deadlock
            # in hyperconverged settings where the volume is mounted on the same node as the osds.
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
    monitoring:
      enabled: true
    ingress:
      dashboard:
        annotations:
          kubernetes.io/ingress.class: "nginx"
          cert-manager.io/cluster-issuer: "cloudflare-issuer"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        host:
          name: &host rook-ceph.invertedorigin.com
        tls:
        - hosts:
          - *host
          secretName: rook-ceph-tls-domain
